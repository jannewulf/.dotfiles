#!/bin/bash

set -e

docs_path="$DOCUMENTS"
tmp_path=/tmp/docs$(date +"%s%N")
in_file=
dry_run=
company=
sent=
title=

YES-no() {
  while true; do
    read -p "$1 [Y|n] " -n 1 -r < /dev/tty
    case "$REPLY" in
      [Y,y] ) return 0;;
      ""    ) return 0;;
      [N,n] ) return 1;;
    esac
  done
}

propose_companies() {
  if [ ! -d "$1" ]; then
    return 1
  fi
  
  for c in "$1"/*; do
    c=$(basename "$c")
    cat "$2" | awk '{print tolower($0)}' | grep -q "$(echo "$c" | awk '{print tolower($0)}')" && YES-no "Is company $c?" && company=$c && return 0
  done
  return 1
}

ask_company() {
  if [ ! -d "$1" ]; then
    echo > "$2"
    echo "# Enter company name" >> "$2"
    echo "# Empty lines and lines starting with # will be ignored" >> "$2"
  else
    ls -1 --quoting-style=literal "$1" | sed 's/^/#/' > "$2"
  fi
  "${EDITOR:-vim}" "$2" < /dev/tty
  company=$(grep -m1 "^[^#[:space:]]" "$2")
  
  if [ -z "$company" ]; then
    return 1
  fi
  return 0
}

propose_sent() {
  first_date=$(grep -m1 -o -E "[[:digit:]]{1,2}\.[[:digit:]]{1,2}\.[[:digit:]]{2,4}" "$1")
  if [ ! -z "$first_date" ]; then
    YES-no "Document sent on $first_date?" && sent="$first_date" && return 0
  fi
  return 1
}

ask_sent() {
  grep -o -E "[[:digit:]]{1,2}\.[[:digit:]]{1,2}\.[[:digit:]]{2,4}" "$1" | \
  sed 's/^/#/' > "$2"
  echo >> "$2"
  echo "# Enter the date this document were sent" >> "$2"
  echo "# Lines starting with # and empty lines are ignored" >> "$2"
  "${EDITOR:-vim}" "$2" < /dev/tty
  
  sent=$(grep -m1 "^[^#[:space:]]" "$2")
  
  if [ -z "$sent" ]; then
    return 1
  fi
  return 0
}

ask_title() {
  echo "# Enter title" > "$2"
  echo "# Lines starting with # and empty lines are ignored" >> "$2"
  echo >> "$2"
  cat "$1" | sed 's/^/#/' >> "$2"
  "${EDITOR:-vim}" "$2" < /dev/tty
  
  title=$(grep -m1 "^[^#[:space:]]" "$2")
  
  if [ -z "$title" ]; then
    return 1
  fi
  return 0
}

## MAIN
if [ -p /dev/stdin ]; then
  read in_file
fi

while [ "$1" != "" ]; do
  case $1 in
    -c | --company )    shift
                        company=$1
                        ;;
    -s | --sent )       shift
                        sent=$1
                        ;;
    --dry-run )         shift
                        dry_run=1
                        ;;
    * )                 in_file="$1"
                        ;;
  esac
  shift
done

if [ -z "$in_file" ]; then
  >&2 echo "Provide file to add"
  exit 1
fi

if [ ! "$(file "$in_file" | grep "PDF document")" ]; then
  >&2 echo "Provided file must be of type PDF"
  exit 1
fi

if [ -z "$docs_path" ]; then
  >&2 echo "Set DOCUMENTS environment variable"
  exit 1
fi

mkdir -p "$tmp_path"

cp "$in_file" "$tmp_path"/raw.pdf
pdftotext "$tmp_path"/raw.pdf "$tmp_path"/raw.txt

if [ -z "$company" ]; then
  propose_companies "$docs_path" "$tmp_path/raw.txt" || \
  ask_company "$docs_path" "$tmp_path/companies.txt" || \
  (>&2 echo "Must provide company name" && exit 1)
fi

if [ -z "$sent" ]; then
  propose_sent "$tmp_path"/raw.txt || \
  ask_sent "$tmp_path"/raw.txt "$tmp_path"/date.txt || \
  (>&2 echo "Must provide date this document was sent on" && exit 1)
  
  # TODO replace the following with awk
  if [ $(echo "$sent" | grep -E "[[:digit:]]{1,2}\.[[:digit:]]{1,2}\.[[:digit:]]{2,4}") ];then
    d=$(echo "$sent" | grep -o -E "^[[:digit:]]{1,2}\." | tr -d .)
    m=$(echo "$sent" | grep -o -E "\.[[:digit:]]{1,2}\." | tr -d .)
    y=$(echo "$sent" | grep -o -E "\.[[:digit:]]{2,4}$" | tr -d .)
    sent="$y"_"$m"_"$d"
  fi
fi

if [ -z "$title" ]; then
  ask_title "$tmp_path"/raw.txt "$tmp_path"/title.txt || \
  (>&2 echo "Must provide document title" && exit 1)
  title=$(echo "$title" | tr [:blank:] _)
fi

doc_dir="$docs_path"/"$company"/."$sent"_"$title"
if [ "$dry_run" = 1 ];then
  echo "$docs_path"/"$company"/"$sent"_"$title".pdf
else
  mkdir -p "$doc_dir"
  mv "$tmp_path"/raw.pdf "$doc_dir"/doc.pdf
  mv "$tmp_path"/raw.txt "$doc_dir"/raw.txt
  
  ln -s "$doc_dir"/doc.pdf "$docs_path"/"$company"/"$sent"_"$title".pdf
fi

rm -rf "$tmp_path"

exit 0

